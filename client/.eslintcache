[{"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/index.tsx":"1","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/reportWebVitals.ts":"2","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/App.tsx":"3","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/redux/reducers/index.ts":"4","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/pages/Home/Home.tsx":"5","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/redux/reducers/users.reducer.ts":"6","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/redux/reducers/wishes.reducer.ts":"7","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/components/Modal/Modal.tsx":"8","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/components/Card/Card.tsx":"9","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/components/Prediction/Prediction.tsx":"10","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/redux/actions/users.action.ts":"11","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/redux/actions/wishes.action.ts":"12","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/core/api/api.ts":"13","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/core/api/request.ts":"14"},{"size":851,"mtime":1608525505943,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1608392432831,"results":"17","hashOfConfig":"16"},{"size":146,"mtime":1608437124391,"results":"18","hashOfConfig":"16"},{"size":203,"mtime":1608443230778,"results":"19","hashOfConfig":"16"},{"size":1411,"mtime":1608440020604,"results":"20","hashOfConfig":"16"},{"size":430,"mtime":1608438871378,"results":"21","hashOfConfig":"16"},{"size":532,"mtime":1608509477761,"results":"22","hashOfConfig":"16"},{"size":1580,"mtime":1608518822037,"results":"23","hashOfConfig":"16"},{"size":4291,"mtime":1608515508747,"results":"24","hashOfConfig":"16"},{"size":1186,"mtime":1608434220250,"results":"25","hashOfConfig":"16"},{"size":255,"mtime":1608438830971,"results":"26","hashOfConfig":"16"},{"size":472,"mtime":1608509630971,"results":"27","hashOfConfig":"16"},{"size":396,"mtime":1608514827684,"results":"28","hashOfConfig":"16"},{"size":107,"mtime":1608442805305,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19egzzf",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/index.tsx",[],"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/reportWebVitals.ts",[],["60","61"],"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/App.tsx",[],"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/redux/reducers/index.ts",[],"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/pages/Home/Home.tsx",[],"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/redux/reducers/users.reducer.ts",[],"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/redux/reducers/wishes.reducer.ts",[],"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/components/Modal/Modal.tsx",[],"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/components/Card/Card.tsx",["62","63"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Wish } from \"../../core/models/Wish\";\nimport { User } from \"../../core/models/User\";\nimport styles from \"./Card.module.scss\";\nimport {clearUsers} from \"../../redux/actions/users.action\";\nimport {setWishes, changeWishes} from \"../../redux/actions/wishes.action\";\nimport {Api} from \"../../core/api/api\";\n\ninterface CardProp {\n  handleRandomElement(arg: any): void;\n  clearUsers: () => void;\n  setWishes: (wishes: Wish[]) => void;\n  changeWishes: (wish: Wish) => void;\n  wishes: Wish[]\n}\n\nconst Card: React.FC<CardProp> = ({ handleRandomElement, clearUsers , setWishes, wishes,changeWishes}) => {\n  const [employee, setEmployee] = useState<string>(\"\");\n  const [randomElement, setRandomElement] = useState<Wish>();\n\n  useEffect((): void => {\n    clearUsers()\n    Api.getWishes()\n        .then(res => {\n          // setWishesArray(res.data);\n          setWishes(res.data)\n        })\n        .catch(err => {\n          console.log(err);\n        });\n  }, [clearUsers, setWishes, changeWishes]);\n\n  const checkUser =()=>{\n    try {\n      Api.setUser({name: employee})\n          .then(res => {\n            console.log(\"user set\")\n          })\n      return true;\n    } catch (e) {\n      return  false\n    }\n  }\n\n  const generateResult = (e: any) => {\n    setEmployee('');\n    if (checkUser()) {\n      const newWishes= wishes.filter(item=> (item.isGift && item.count &&  item.count>0) || !item.isGift)\n      const wish = newWishes[Math.floor(Math.random() * newWishes.length)];\n      setRandomElement(wish);\n      handleRandomElement(wish);\n      if (wish?.isGift && wish.count) {\n        const newCount = --wish.count\n        Api.changeWish({id: wish._id, count: newCount})\n        sendMail(employee, wish);\n      }\n    } else {\n      const newWishes= wishes.filter(item=>!item.isGift)\n      const wish = newWishes[Math.floor(Math.random() * newWishes.length)];\n      handleRandomElement(wish);\n    }\n    e.preventDefault();\n  };\n\n  const sendMail = (employee: string, randomElement: Wish) => {\n    let { text } = randomElement;\n    text = `${employee}: ${text}`;\n    Api.sendMail({ text: text })\n        .then((resData) => {\n          if (resData.status === 200) {\n            setEmployee(\"\");\n          } else  {\n            console.log(resData);\n          }\n        });\n  };\n\n  const handleChange = (e: any) => {\n    setEmployee(e.target.value);\n  };\n\n  return (\n    <div className={styles.Card}>\n      <div className={styles.Content}>\n        <h1 className={styles.Title}>\n          С наступающим <br />\n          Новым Годом!\n        </h1>\n        <p className={styles.Text}>\n          Пусть новый год будет наполнен достижениями, богатством, <br />\n          любовью и здоровьем! Желаем вам мира, благополучия и счастья,\n          <br /> пусть в Новом Году всё получится, и задуманное сбудется!\n        </p>\n        <p className={styles.TextBold}>\n          Предлагаем вам принять участие в моментальной <br />\n          лотерее, у вас есть возможность получить предсказание <br />\n          на будущий год, пожелание или приятный подарок!\n        </p>\n        <form onSubmit={generateResult} className={styles.Form}>\n          <div>\n\n            <input\n              name=\"employee\"\n              type=\"text\"\n              required\n              className={styles.Input}\n              value={employee}\n              onChange={handleChange}\n              placeholder=\"Пожалуйста введите свою фамилию и имя\"\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className={styles.Button}\n            onChange={generateResult}\n          >\n            Участвовать!\n          </button>\n        </form>\n        <div className={styles.Logo} />\n      </div>\n    </div>\n  );\n};\n\n// @ts-ignore\nexport default connect(\n    (state: any) => ({ wishes: state.wishesReducer }),\n    {clearUsers, setWishes, changeWishes}\n    )(Card);\n","/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/components/Prediction/Prediction.tsx",[],"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/redux/actions/users.action.ts",[],"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/redux/actions/wishes.action.ts",[],"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/core/api/api.ts",[],"/Users/zhanyl/Documents/work/new-year-app/newYearWishesBack/client/src/core/api/request.ts",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":14},{"ruleId":"68","severity":1,"message":"72","line":20,"column":10,"nodeType":"70","messageId":"71","endLine":20,"endColumn":23},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","'randomElement' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]